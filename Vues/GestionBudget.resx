<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>